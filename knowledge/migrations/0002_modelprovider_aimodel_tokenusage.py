# Generated by Django 5.1.7 on 2025-03-13 13:24

import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('knowledge', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='ModelProvider',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, unique=True, verbose_name='提供商名称')),
                ('slug', models.SlugField(unique=True, verbose_name='提供商标识')),
                ('api_base', models.URLField(blank=True, max_length=255, verbose_name='API基础URL')),
                ('api_version', models.CharField(blank=True, max_length=20, verbose_name='API版本')),
                ('is_active', models.BooleanField(default=True, verbose_name='是否启用')),
                ('auth_required', models.BooleanField(default=True, verbose_name='是否需要认证')),
                ('api_key', models.CharField(blank=True, max_length=100, verbose_name='API密钥')),
                ('api_secret', models.CharField(blank=True, max_length=100, verbose_name='API密钥2')),
                ('description', models.TextField(blank=True, verbose_name='提供商描述')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='更新时间')),
            ],
            options={
                'verbose_name': '模型提供商',
                'verbose_name_plural': '模型提供商',
            },
        ),
        migrations.CreateModel(
            name='AIModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='模型名称')),
                ('model_id', models.CharField(max_length=100, unique=True, verbose_name='模型ID')),
                ('model_type', models.CharField(choices=[('chat', '对话模型'), ('text', '文本生成'), ('embedding', '向量嵌入'), ('image', '图像生成'), ('audio', '语音处理')], default='chat', max_length=20, verbose_name='模型类型')),
                ('max_tokens', models.IntegerField(default=2000, verbose_name='最大Token数')),
                ('temperature', models.FloatField(default=0.7, verbose_name='温度')),
                ('top_p', models.FloatField(default=1.0, verbose_name='Top P')),
                ('presence_penalty', models.FloatField(default=0.0, verbose_name='存在惩罚')),
                ('frequency_penalty', models.FloatField(default=0.0, verbose_name='频率惩罚')),
                ('cost_prompt', models.FloatField(default=0.0, verbose_name='提示词每千Token成本(美元)')),
                ('cost_completion', models.FloatField(default=0.0, verbose_name='回复每千Token成本(美元)')),
                ('is_default', models.BooleanField(default=False, verbose_name='是否默认模型')),
                ('is_active', models.BooleanField(default=True, verbose_name='是否启用')),
                ('display_order', models.IntegerField(default=0, verbose_name='显示顺序')),
                ('context_window', models.IntegerField(default=4096, verbose_name='上下文窗口大小')),
                ('description', models.TextField(blank=True, verbose_name='模型描述')),
                ('capabilities', models.JSONField(blank=True, default=dict, verbose_name='模型能力')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='更新时间')),
                ('provider', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='knowledge.modelprovider', verbose_name='提供商')),
            ],
            options={
                'verbose_name': 'AI模型',
                'verbose_name_plural': 'AI模型',
                'ordering': ['display_order', 'provider__name', 'name'],
            },
        ),
        migrations.CreateModel(
            name='TokenUsage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('prompt_tokens', models.IntegerField(default=0, verbose_name='提示词Token数')),
                ('completion_tokens', models.IntegerField(default=0, verbose_name='回复Token数')),
                ('total_tokens', models.IntegerField(default=0, verbose_name='总Token数')),
                ('cost_usd', models.FloatField(default=0.0, verbose_name='成本(美元)')),
                ('cost_rmb', models.FloatField(default=0.0, verbose_name='成本(人民币)')),
                ('request_time', models.DateTimeField(default=django.utils.timezone.now, verbose_name='请求时间')),
                ('response_time', models.FloatField(default=0.0, verbose_name='响应时间(秒)')),
                ('is_successful', models.BooleanField(default=True, verbose_name='请求是否成功')),
                ('error_message', models.TextField(blank=True, verbose_name='错误信息')),
                ('session_id', models.CharField(blank=True, max_length=100, verbose_name='会话ID')),
                ('metadata', models.JSONField(blank=True, default=dict, verbose_name='元数据')),
                ('conversation', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='knowledge.conversation', verbose_name='对话')),
                ('message', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='knowledge.message', verbose_name='消息')),
                ('model', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='knowledge.aimodel', verbose_name='模型')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='用户')),
            ],
            options={
                'verbose_name': 'Token使用记录',
                'verbose_name_plural': 'Token使用记录',
                'indexes': [models.Index(fields=['user', 'request_time'], name='knowledge_t_user_id_139c3b_idx'), models.Index(fields=['model', 'request_time'], name='knowledge_t_model_i_f03239_idx')],
            },
        ),
    ]
